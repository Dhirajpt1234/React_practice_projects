{"ast":null,"code":"var _jsxFileName = \"/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/Hooks/HookUseState.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HookUseState() {\n  _s();\n  function countInitial() {\n    console.log(\"Run function\");\n    return 0;\n  }\n  const [count, setCount] = useState(0);\n\n  // always use function version.\n  const [state, setState] = useState(() => {\n    // countInitial();\n  });\n  //   const [state1, setState1] = useState(countInitial());\n\n  const [state2, setState2] = useState(() => {\n    return {\n      count: 0,\n      color: \"Blue\"\n    };\n  });\n\n  //----------------------------------------------------------------------\n  const increment = () => {\n    // setCount((prevValue) => {\n    //   return prevValue + 1;\n    // });\n\n    // setCount((prevValue) => {\n    //   return prevValue + 1;\n    // });\n\n    //this both update will only one , caz react changes are asyncronus and they are putting the value from count state, which is updated later, so both values will set teh value to the same.\n    // setCount(count + 1);\n    // setCount(count + 1); // as I have written it at last, It can overrid prev 2.\n\n    setCount(prevValue => {\n      return [...prevValue, prevValue.count + 1];\n    });\n  };\n  const decrement = () => {\n    // setCount((prevValue) => {\n    //   return prevValue - 1;\n    // });\n\n    // setCount((prevValue) => {\n    //   return prevValue - 1;\n    // });\n\n    setCount(prevValue => {\n      return [...prevValue, prevValue.count - 1];\n    });\n  };\n  //----------------------------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"Incre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"Decr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(HookUseState, \"4tbgwB29iBIqyMYfbK4rojLgDZ4=\");\n_c = HookUseState;\nvar _c;\n$RefreshReg$(_c, \"HookUseState\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","HookUseState","_s","countInitial","console","log","count","setCount","state","setState","state2","setState2","color","increment","prevValue","decrement","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/Hooks/HookUseState.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function HookUseState() {\n  function countInitial() {\n    console.log(\"Run function\");\n    return 0;\n  }\n  const [count, setCount] = useState(0);\n\n  // always use function version.\n  const [state, setState] = useState(() => {\n    // countInitial();\n  });\n  //   const [state1, setState1] = useState(countInitial());\n\n  const [state2, setState2] = useState(() => {\n    return {\n      count: 0,\n      color: \"Blue\",\n    };\n  });\n\n  //----------------------------------------------------------------------\n  const increment = () => {\n    // setCount((prevValue) => {\n    //   return prevValue + 1;\n    // });\n\n    // setCount((prevValue) => {\n    //   return prevValue + 1;\n    // });\n\n    //this both update will only one , caz react changes are asyncronus and they are putting the value from count state, which is updated later, so both values will set teh value to the same.\n    // setCount(count + 1);\n    // setCount(count + 1); // as I have written it at last, It can overrid prev 2.\n\n    setCount((prevValue) => {\n      return [...prevValue, prevValue.count + 1];\n    });\n  };\n\n  const decrement = () => {\n    // setCount((prevValue) => {\n    //   return prevValue - 1;\n    // });\n\n    // setCount((prevValue) => {\n    //   return prevValue - 1;\n    // });\n\n    setCount((prevValue) => {\n      return [...prevValue, prevValue.count - 1];\n    });\n  };\n  //----------------------------------------------------------------------\n\n  return (\n    <>\n      <div>\n        <div>{count}</div>\n        {/* <div>{count}</div> */}\n        <button onClick={increment}>Incre</button>\n        <button onClick={decrement}>Decr</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,SAASC,YAAYA,CAAA,EAAG;IACtBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAO,CAAC;EACV;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACvC;EAAA,CACD,CAAC;EACF;;EAEA,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,MAAM;IACzC,OAAO;MACLU,KAAK,EAAE,CAAC;MACRM,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEAN,QAAQ,CAAEO,SAAS,IAAK;MACtB,OAAO,CAAC,GAAGA,SAAS,EAAEA,SAAS,CAACR,KAAK,GAAG,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA;IACA;;IAEA;IACA;IACA;;IAEAR,QAAQ,CAAEO,SAAS,IAAK;MACtB,OAAO,CAAC,GAAGA,SAAS,EAAEA,SAAS,CAACR,KAAK,GAAG,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAMV;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAElBtB,OAAA;QAAQuB,OAAO,EAAER,SAAU;QAAAG,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1CtB,OAAA;QAAQuB,OAAO,EAAEN,SAAU;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC,gBACN,CAAC;AAEP;AAAClB,EAAA,CAhEuBD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}