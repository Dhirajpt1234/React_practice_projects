{"ast":null,"code":"var _jsxFileName = \"/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/Temp/Temp1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Temp1() {\n  _s();\n  // State to manage the width of the div\n  const [divWidth, setDivWidth] = useState(200); // Initial width\n\n  // Function to handle changing the width\n  const handleChangeWidth = () => {\n    // Update the width to a new value\n    const newWidth = Math.floor(Math.random() * 300) + 100; // Generate a random width between 100 and 400\n    setDivWidth(newWidth);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${divWidth}px`,\n        height: \"100px\",\n        backgroundColor: \"lightblue\"\n      },\n      children: \"Dynamic Div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChangeWidth,\n      children: \"Change Width\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Temp1, \"Gw9FvsaUtMMbXFo6IjASUR1apks=\");\n_c = Temp1;\nexport default Temp1;\nvar _c;\n$RefreshReg$(_c, \"Temp1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Temp1","_s","divWidth","setDivWidth","handleChangeWidth","newWidth","Math","floor","random","children","style","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/Temp/Temp1.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Temp1() {\n  // State to manage the width of the div\n  const [divWidth, setDivWidth] = useState(200); // Initial width\n\n  // Function to handle changing the width\n  const handleChangeWidth = () => {\n    // Update the width to a new value\n    const newWidth = Math.floor(Math.random() * 300) + 100; // Generate a random width between 100 and 400\n    setDivWidth(newWidth);\n  };\n\n  return (\n    <div>\n      {/* Render the div with dynamic width */}\n      <div\n        style={{\n          width: `${divWidth}px`,\n          height: \"100px\",\n          backgroundColor: \"lightblue\",\n        }}\n      >\n        Dynamic Div\n      </div>\n\n      {/* Button to change the width */}\n      <button onClick={handleChangeWidth}>Change Width</button>\n    </div>\n  );\n}\n\nexport default Temp1;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACxDL,WAAW,CAACE,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MACEW,KAAK,EAAE;QACLC,KAAK,EAAG,GAAET,QAAS,IAAG;QACtBU,MAAM,EAAE,OAAO;QACfC,eAAe,EAAE;MACnB,CAAE;MAAAJ,QAAA,EACH;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGNlB,OAAA;MAAQmB,OAAO,EAAEd,iBAAkB;MAAAK,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAAChB,EAAA,CA5BQD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}