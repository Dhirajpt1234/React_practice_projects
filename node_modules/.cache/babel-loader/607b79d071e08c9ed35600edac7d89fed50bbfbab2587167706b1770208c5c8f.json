{"ast":null,"code":"var _jsxFileName = \"/media/dhiraj/DATA/web/React_practice_projects/src/Hooks/UseRef/HookUseRef2.jsx\",\n  _s = $RefreshSig$();\nimport { queryAllByPlaceholderText } from '@testing-library/react';\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HookUseRef2() {\n  _s();\n  const [name, setName] = useState('');\n  const prevName = useRef();\n  console.log(\"name : \" + name);\n  console.log(\"prevName : \" + prevName);\n  const handleChange = e => {\n    setName(e.target.value);\n    prevName.current = name;\n  };\n  console.log(\"name : \" + name);\n  console.log(\"prevName : \" + prevName);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"My name is \", name, \" and it is used to be \", prevName.current, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(HookUseRef2, \"7VXW2SYcgaHUIunBgJotp0brfWw=\");\n_c = HookUseRef2;\nvar _c;\n$RefreshReg$(_c, \"HookUseRef2\");","map":{"version":3,"names":["queryAllByPlaceholderText","React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","HookUseRef2","_s","name","setName","prevName","console","log","handleChange","e","target","value","current","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/dhiraj/DATA/web/React_practice_projects/src/Hooks/UseRef/HookUseRef2.jsx"],"sourcesContent":["import { queryAllByPlaceholderText } from '@testing-library/react';\nimport React, { useRef, useState } from 'react'\n\nexport default function HookUseRef2() {\n\n    const [name, setName] = useState('')\n    const prevName = useRef();\n\n    console.log(\"name : \" + name);\n    console.log(\"prevName : \" + prevName);\n    \n    const handleChange = (e) => {\n        setName(e.target.value);\n        prevName.current = name;\n    }\n    \n    console.log(\"name : \" + name);\n    console.log(\"prevName : \" + prevName);\n\n\n\n    return (\n        <>\n            <input type=\"text\" value={name} onChange={handleChange} />\n            <p>My name is {name} and it is used to be {prevName.current} </p>\n        </>\n    )\n}\n"],"mappings":";;AAAA,SAASA,yBAAyB,QAAQ,wBAAwB;AAClE,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzBW,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGJ,IAAI,CAAC;EAC7BG,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,QAAQ,CAAC;EAErC,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxBL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvBN,QAAQ,CAACO,OAAO,GAAGT,IAAI;EAC3B,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGJ,IAAI,CAAC;EAC7BG,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGF,QAAQ,CAAC;EAIrC,oBACIP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACH,KAAK,EAAER,IAAK;MAACY,QAAQ,EAAEP;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DrB,OAAA;MAAAe,QAAA,GAAG,aAAW,EAACV,IAAI,EAAC,wBAAsB,EAACE,QAAQ,CAACO,OAAO,EAAC,GAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACnE,CAAC;AAEX;AAACjB,EAAA,CAxBuBD,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}