{"ast":null,"code":"var _jsxFileName = \"/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/ProgressBar/Example.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  // we need to keep a reference of the toastId to be able to update it\n  const toastId = React.useRef(null);\n  function handleUpload() {\n    axios.request({\n      method: \"post\",\n      url: \"/foobar\",\n      data: myData,\n      onUploadProgress: p => {\n        const progress = p.loaded / p.total;\n\n        // check if we already displayed a toast\n        if (toastId.current === null) {\n          toastId.current = toast(\"Upload in Progress\", {\n            progress\n          });\n        } else {\n          toast.update(toastId.current, {\n            progress\n          });\n        }\n      }\n    }).then(data => {\n      // Upload is done!\n      // The remaining progress bar will be filled up\n      // The toast will be closed when the transition end\n      toast.done(toastId.current);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload something\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Example, \"FfcV3eAMq/0mTB8gIZsJEYf8nGA=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["axios","toast","jsxDEV","_jsxDEV","Example","_s","toastId","React","useRef","handleUpload","request","method","url","data","myData","onUploadProgress","p","progress","loaded","total","current","update","then","done","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dhiraj/Desktop/Dhiraj/web/React/react_practise_projects/React_practice_projects/src/ProgressBar/Example.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nfunction Example() {\n  // we need to keep a reference of the toastId to be able to update it\n  const toastId = React.useRef(null);\n\n  function handleUpload() {\n    axios\n      .request({\n        method: \"post\",\n        url: \"/foobar\",\n        data: myData,\n        onUploadProgress: (p) => {\n          const progress = p.loaded / p.total;\n\n          // check if we already displayed a toast\n          if (toastId.current === null) {\n            toastId.current = toast(\"Upload in Progress\", { progress });\n          } else {\n            toast.update(toastId.current, { progress });\n          }\n        },\n      })\n      .then((data) => {\n        // Upload is done!\n        // The remaining progress bar will be filled up\n        // The toast will be closed when the transition end\n        toast.done(toastId.current);\n      });\n  }\n\n  return (\n    <div>\n      <button onClick={handleUpload}>Upload something</button>\n    </div>\n  );\n}\n\nexport default Example;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,MAAM,CAAC,IAAI,CAAC;EAElC,SAASC,YAAYA,CAAA,EAAG;IACtBT,KAAK,CACFU,OAAO,CAAC;MACPC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAEC,MAAM;MACZC,gBAAgB,EAAGC,CAAC,IAAK;QACvB,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,GAAGF,CAAC,CAACG,KAAK;;QAEnC;QACA,IAAIb,OAAO,CAACc,OAAO,KAAK,IAAI,EAAE;UAC5Bd,OAAO,CAACc,OAAO,GAAGnB,KAAK,CAAC,oBAAoB,EAAE;YAAEgB;UAAS,CAAC,CAAC;QAC7D,CAAC,MAAM;UACLhB,KAAK,CAACoB,MAAM,CAACf,OAAO,CAACc,OAAO,EAAE;YAAEH;UAAS,CAAC,CAAC;QAC7C;MACF;IACF,CAAC,CAAC,CACDK,IAAI,CAAET,IAAI,IAAK;MACd;MACA;MACA;MACAZ,KAAK,CAACsB,IAAI,CAACjB,OAAO,CAACc,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN;EAEA,oBACEjB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAQsB,OAAO,EAAEhB,YAAa;MAAAe,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACxB,EAAA,CAlCQD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}